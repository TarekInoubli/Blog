@page "/createpost"
@inject BlazorBlog.Client.Services.IBlogService BlogService
@inject NavigationManager NavigationManager
@using Markdig
@using BlazorBlog.Shared 

<h3>Create a New Blog Post</h3>

<EditForm Model="@newPost" OnValidSubmit="CreateNewBlogPost">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="title">Title</label>
        <InputText id="title" @bind-Value="newPost.Title" class="form-control" />
        <ValidationMessage For="@(() => newPost.Title)" />
    </div>
    <div class="form-group">
        <label for="url">Url</label>
        <InputText id="url" @bind-Value="newPost.Url" class="form-control" />
        <ValidationMessage For="@(() => newPost.Url)" />
    </div>
    <div class="form-control-file">
        <label for="image">Image</label>
        <InputFile OnChange="OnFileChange" />
    </div>
    <div class="form-group">
        <label for="description">Description</label>
        <InputText id="description" @bind-Value="newPost.Description" class="form-control" />
    </div>
    <div class="form-group">
        <label for="content">Content</label>
        <BlogTextArea id="content" @bind-Value="newPost.Content" class="form-control" />
    </div>
    <div class="form-group">
        <label for="contentPreview">Content Preview</label>
        <div id="contentPreview" style="height: 100%;" class="form-control">@((MarkupString)Markdown.ToHtml(newPost.Content))</div>
    </div>
    <div class="form-group">
        <label for="date">Date</label>
        <InputDate id="date" @bind-Value="newPost.DateCreated" class="form-control" />
    </div>
    <div class="form-group">
        <label for="tags">Tags</label>
        <InputText id="tags" @bind-Value="newPost.Tags" class="form-control" />
    </div>
    <div class="form-group">
        <label for="author">Author</label>
        <select id="author" @bind="authorID" class="form-control">
            @foreach (var user in users)
            {
                <option value="@user.Id">@user.Username</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="category">Category</label>
        <select id="category" @bind="categoryID" class="form-control">
            @foreach (var cat in categories)
            {
                <option value="@cat.Id">@cat.Name</option>
            }
        </select>
    </div>
    <div class="form-check">
        <InputCheckbox id="isPublished" @bind-Value="newPost.IsPublished" class="form-check-input" />
        <label for="isPublished">Publish</label>
    </div>
    <button type="submit" class="btn btn-primary">Create</button>
</EditForm>

@code {

    private int authorID = 1;
    private int categoryID = 1;

    BlazorBlog.Shared.Post newPost = new BlazorBlog.Shared.Post();

    private List<User> users = new List<User>();

    private List<Category> categories = new List<Category>();

    async Task CreateNewBlogPost()
    {
        newPost.AuthorID = authorID;
        newPost.CategoryID = categoryID;

        var result = await BlogService.CreateNewBlogPost(newPost);
        NavigationManager.NavigateTo($"posts/{result.Url}");
    }

    async Task OnFileChange(InputFileChangeEventArgs e)
    {
        var format = "image/png";
        var resizedImage = await e.File.RequestImageFileAsync(format, 1060, 1060);
        var buffer = new byte[resizedImage.Size];
        await resizedImage.OpenReadStream().ReadAsync(buffer);
        var imageData = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
        newPost.Image = imageData;
    }

    protected override async Task OnInitializedAsync()
    {
        users = await BlogService.GetUsers();
        categories = await BlogService.GetCategories();
    }
}
